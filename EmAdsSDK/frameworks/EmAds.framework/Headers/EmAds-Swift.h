#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
#ifndef EMADS_SWIFT_H
#define EMADS_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="EmAds",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)


/// 优量汇和穿⼭甲⽀持回调服务端激励验证信息Object
SWIFT_CLASS("_TtC5EmAds25EARewardServerCallBackInf")
@interface EARewardServerCallBackInf : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum EmAdErrorCode : NSInteger;
@class NSString;

SWIFT_CLASS("_TtC5EmAds9EmAdError")
@interface EmAdError : NSObject
@property (nonatomic) enum EmAdErrorCode code;
@property (nonatomic, copy) NSString * _Nullable message;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// 错误码
typedef SWIFT_ENUM(NSInteger, EmAdErrorCode, open) {
/// 默认-
  EmAdErrorCodeDefault = 1,
/// 成功-
  EmAdErrorCodeSucceed = 0,
/// ⼴告返回的数据为空，⼀般为渠道⼴告⽆填充。-
  EmAdErrorCodeNoads = 9901,
/// 加载某个SDK渠道时发⽣异常（不使用）
  EmAdErrorCodeLoadChannelError = 9902,
/// 当前策略中⽆有效的SDK渠道，或渠道信息为空-
  EmAdErrorCodeEmRulesInvalid = 9905,
/// 策略调度时发⽣异常，不支持的渠道-
  EmAdErrorCodeStrategyException = 9906,
/// 未获取到策略，appid 请求配置错误-
  EmAdErrorCodeInitialAppIdInvalid = 9907,
/// 某个SDK渠道启动异常（不使用）
  EmAdErrorCodeChannelStartError = 9908,
/// 穿⼭甲渠道SDK超时且不再加载优先级更低的渠道（不使用）
  EmAdErrorCodeLoadCSJSDKTimeoutAndNotLoadLower = 9909,
/// 穿⼭甲渠道SDK超时（不使用）
  EmAdErrorCodeLoadCSJSDKTimeout = 9910,
/// 百度SDK加载失败（不使用）
  EmAdErrorCodeLoadBDFailed = 9911,
/// 快⼿SDK加载失败，⼴告位id类型转换异常（不使用）
  EmAdErrorCodeLoadKSFailed = 9912,
/// 广告当前要显示的view载体已被销毁，导致⼴告⽆可⽤载体（不使用）
  EmAdErrorCodeViewCarrierDestroyed = 9913,
/// 未知（不使用）
  EmAdErrorCodeUnknown = -9997,
/// 接口数据解析错误-
  EmAdErrorCodeParseException = -2009,
/// 网络断开-
  EmAdErrorCodeNetworkOffline = 20999,
/// appid 重试请求配置多次错误-
  EmAdErrorCodeReqConfigMaxTimesError = 20997,
/// SDK初始化失败-
  EmAdErrorCodeInitialSDKFailed = 20996,
/// SDK未启用-
  EmAdErrorCodeEmSDKDisabledError = 20989,
/// 加载开屏广告失败-
  EmAdErrorCodeLoadSplashAdError = 20995,
/// 加载插屏广告失败-
  EmAdErrorCodeLoadInterstitialAdError = 20994,
/// 加载Banner广告失败-
  EmAdErrorCodeLoadBannerAdError = 20993,
/// 加载原生模板，信息流广告失败-
  EmAdErrorCodeLoadNativeExpressAdError = 20992,
/// 加载激励视频广告失败-
  EmAdErrorCodeLoadRewardVideoAdError = 20991,
/// 加载全屏视频广告失败-
  EmAdErrorCodeLoadFullScreenVideoAdError = 20990,
/// UnSupport iOS Version-
  EmAdErrorCodeUnsuppurtIOSVersion = 20988,
/// showAd需要与loadAdOnly搭配使用
  EmAdErrorCodeLoadAdOnlyFirst = 20987,
/// 信息流广告不支持竞价
  EmAdErrorCodeUnsupportNativeExpressBidding = 20983,
};


SWIFT_CLASS("_TtC5EmAds8EmAdsSDK")
@interface EmAdsSDK : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// EmAds SDK初始化方法
/// <ul>
///   <li>
///     Parameters:
///   </li>
///   <li>
///     launchOptions: launchOptions
///   </li>
///   <li>
///     isDebug:  是否开启debug⽇志
///   </li>
///   <li>
///     emlAppId: emlAppId
///   </li>
///   <li>
///     handler: 结果回调
///   </li>
/// </ul>
///
/// returns:
/// Void
+ (void)initSDKWithLaunchOptions:(NSDictionary<UIApplicationLaunchOptionsKey, id> * _Nullable)launchOptions isDebug:(BOOL)isDebug emlAppId:(NSString * _Nonnull)emlAppId resultHandler:(void (^ _Nullable)(EmAdError * _Nonnull))handler SWIFT_METHOD_FAMILY(none);
/// EmAds SDK初始化方法
/// <ul>
///   <li>
///     Parameters:
///   </li>
///   <li>
///     launchOptions: launchOptions
///   </li>
///   <li>
///     isDebug:  是否开启debug⽇志
///   </li>
///   <li>
///     emlAppId: emlAppId
///   </li>
///   <li>
///     idfaEnabled: 是否开启idfa, 当值为true时， 需要在info.plist中增加NSUserTrackingUsageDescription属性, 默认false
///   </li>
///   <li>
///     handler: 结果回调
///   </li>
/// </ul>
///
/// returns:
/// Void
+ (void)initSDKWithLaunchOptions:(NSDictionary<UIApplicationLaunchOptionsKey, id> * _Nullable)launchOptions isDebug:(BOOL)isDebug emlAppId:(NSString * _Nonnull)emlAppId idfaEnabled:(BOOL)idfaEnabled resultHandler:(void (^ _Nullable)(EmAdError * _Nonnull))handler SWIFT_METHOD_FAMILY(none);
/// 获取EmAds.framework版本号
///
/// returns:
/// EmAds.framework的版本号
+ (NSString * _Nonnull)getVersion SWIFT_WARN_UNUSED_RESULT;
/// 获取内部百度SDK版本号
+ (NSString * _Nonnull)getBDVersion SWIFT_WARN_UNUSED_RESULT;
/// 获取内部GDT SDK 广点通版本号
+ (NSString * _Nonnull)getGDTVersion SWIFT_WARN_UNUSED_RESULT;
/// 获取内部快手 SDK 版本号
+ (NSString * _Nonnull)getKSVersion SWIFT_WARN_UNUSED_RESULT;
/// 获取内部穿山甲 SDK 版本号
+ (NSString * _Nonnull)getCSJVersion SWIFT_WARN_UNUSED_RESULT;
/// 设置开屏v+ ⼩窗⼝⾃动关闭时间，单位毫秒，不设置使⽤默认各个渠道默认展示逻辑（该方法暂不起作用）
/// \param timeInterval 毫秒数
///
///
/// returns:
/// Void
+ (void)setSplashPlusAutoCloseWithTimeInterval:(NSInteger)timeInterval;
/// 获取当前设备的设备ID，SDK内部自定义的获取机制，抹掉系统设置，该值会发生改变
+ (NSString * _Nonnull)deviceId SWIFT_WARN_UNUSED_RESULT;
/// 查看SDK是否初始化成功
///
/// returns:
/// true表示初始化成功，false表示初始化失败, 每次调用initSDK会重新赋值
+ (BOOL)isSDKInitialSucceed SWIFT_WARN_UNUSED_RESULT;
/// 是否展示
/// \param isShow 将log显示在window界面上
///
///
/// returns:
/// Void
+ (void)setLogWindowWithIsShow:(BOOL)isShow;
@end


@class UIViewController;
@class UIView;
@protocol EmBannerDelegate;

/// 横幅广告
SWIFT_CLASS("_TtC5EmAds8EmBanner")
@interface EmBanner : NSObject
- (nonnull instancetype)initWithViewController:(UIViewController * _Null_unspecified)viewController adContainer:(UIView * _Null_unspecified)adContainer delegate:(id <EmBannerDelegate> _Nullable)delegate OBJC_DESIGNATED_INITIALIZER;
/// 仅拉取广告
- (void)loadOnly;
/// 展示广告，和loadOnly()方法搭配使用
- (void)show;
/// 销毁广告
- (void)destroy;
/// 拉取并展示广告
- (void)loadAndShow;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// 广告的生命周期的基类协议
SWIFT_PROTOCOL("_TtP5EmAds16EmBaseAdDelegate_")
@protocol EmBaseAdDelegate
/// 广告就绪
- (void)onAdSucceed;
/// 广告关闭
- (void)onAdClose;
/// 广告展示/曝光
- (void)onAdExposure;
/// 广告加载失败
- (void)onAdFailedWithError:(EmAdError * _Nonnull)error;
/// ⼴告点击
- (void)onAdClicked;
@end


/// 横幅⼴告的生命周期协议
SWIFT_PROTOCOL("_TtP5EmAds16EmBannerDelegate_")
@protocol EmBannerDelegate <EmBaseAdDelegate>
@end


@protocol EmFullScreenVideoDelegate;

/// 全屏广告
SWIFT_CLASS("_TtC5EmAds17EmFullScreenVideo")
@interface EmFullScreenVideo : NSObject
- (nonnull instancetype)initWithViewController:(UIViewController * _Null_unspecified)viewController delegate:(id <EmFullScreenVideoDelegate> _Nullable)delegate OBJC_DESIGNATED_INITIALIZER;
/// 仅拉取广告
- (void)loadOnly;
/// 展示广告，和loadOnly()方法搭配使用
- (void)show;
/// 销毁广告
- (void)destroy;
/// 拉取并展示广告
- (void)loadAndShow;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// 全屏视频⼴告的生命周期协议
SWIFT_PROTOCOL("_TtP5EmAds25EmFullScreenVideoDelegate_")
@protocol EmFullScreenVideoDelegate <EmBaseAdDelegate>
- (void)onVideoCached;
/// ⼴告播放完毕
- (void)onVideoComplete;
/// 跳过 (注意有些渠道会只会响应onAdClose)
- (void)onVideoSkip;
@end

@protocol EmInterstitialDelegate;

/// 开屏广告
SWIFT_CLASS("_TtC5EmAds14EmInterstitial")
@interface EmInterstitial : NSObject
- (nonnull instancetype)initWithViewController:(UIViewController * _Null_unspecified)viewController delegate:(id <EmInterstitialDelegate> _Nullable)delegate OBJC_DESIGNATED_INITIALIZER;
/// 仅拉取广告
- (void)loadOnly;
/// 展示广告，和loadOnly()方法搭配使用
- (void)show;
/// 销毁广告
- (void)destroy;
/// 拉取并展示广告
- (void)loadAndShow;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// 插屏⼴告的生命周期协议
SWIFT_PROTOCOL("_TtP5EmAds22EmInterstitialDelegate_")
@protocol EmInterstitialDelegate <EmBaseAdDelegate>
@end

@protocol EmNativeExpressDelegate;

/// 信息流广告
SWIFT_CLASS("_TtC5EmAds15EmNativeExpress")
@interface EmNativeExpress : NSObject
@property (nonatomic, readonly) BOOL isLoadAndShow;
@property (nonatomic, readonly) BOOL isLoaded;
- (nonnull instancetype)initWithViewController:(UIViewController * _Null_unspecified)viewController delegate:(id <EmNativeExpressDelegate> _Nullable)delegate adSize:(CGSize)adSize OBJC_DESIGNATED_INITIALIZER;
/// 仅拉取广告
- (void)loadOnly;
/// 销毁广告
- (void)destroy;
/// 拉取并展示广告
- (void)loadAndShow;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class EmNativeExpressView;

/// 原⽣模板、信息流⼴告的生命周期协议,  比较特殊， 不继承自EmBaseAdDelegate
SWIFT_PROTOCOL("_TtP5EmAds23EmNativeExpressDelegate_")
@protocol EmNativeExpressDelegate
/// 广告就绪
- (void)onAdSucceedWithAdViews:(NSArray<EmNativeExpressView *> * _Nullable)adViews nativeExpressAd:(EmNativeExpress * _Nonnull)nativeExpressAd;
/// 广告关闭
- (void)onAdCloseWithAdView:(EmNativeExpressView * _Nullable)adView nativeExpressAd:(EmNativeExpress * _Nonnull)nativeExpressAd;
/// 广告展示
- (void)onAdExposureWithAdView:(EmNativeExpressView * _Nullable)adView nativeExpressAd:(EmNativeExpress * _Nonnull)nativeExpressAd;
/// 广告加载失败
- (void)onAdFailedWithError:(EmAdError * _Nonnull)error nativeExpressAd:(EmNativeExpress * _Nonnull)nativeExpressAd;
/// ⼴告点击
- (void)onAdClickedWithAdView:(EmNativeExpressView * _Nullable)adView nativeExpressAd:(EmNativeExpress * _Nonnull)nativeExpressAd;
/// ⼴告渲染成功
- (void)onAdRenderSuccessWithAdView:(EmNativeExpressView * _Nullable)adView nativeExpressAd:(EmNativeExpress * _Nonnull)nativeExpressAd;
/// ⼴告渲染失败
- (void)onAdRenderFailedWithAdView:(EmNativeExpressView * _Nullable)adView nativeExpressAd:(EmNativeExpress * _Nonnull)nativeExpressAd;
@end


SWIFT_CLASS("_TtC5EmAds19EmNativeExpressView")
@interface EmNativeExpressView : NSObject
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, strong) UIView * _Nullable expressView;
- (void)render;
- (void)trackImpression;
- (void)destoryExpressView;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol EmRewardVideoDelegate;

/// 激励广告
SWIFT_CLASS("_TtC5EmAds13EmRewardVideo")
@interface EmRewardVideo : NSObject
- (nonnull instancetype)initWithViewController:(UIViewController * _Null_unspecified)viewController delegate:(id <EmRewardVideoDelegate> _Nullable)delegate OBJC_DESIGNATED_INITIALIZER;
/// 仅拉取广告
- (void)loadOnly;
/// 展示广告，和loadOnly()方法搭配使用
- (void)show;
/// 销毁广告
- (void)destroy;
/// 拉取并展示广告
- (void)loadAndShow;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// 激励视频⼴告的生命周期协议
SWIFT_PROTOCOL("_TtP5EmAds21EmRewardVideoDelegate_")
@protocol EmRewardVideoDelegate <EmBaseAdDelegate>
/// ⼴告缓存成功
- (void)onVideoCached;
/// ⼴告播放完毕
- (void)onVideoComplete;
- (void)onVideoSkip;
/// 奖励发放
- (void)onAdReward;
- (void)onRewardServerInfWithInf:(EARewardServerCallBackInf * _Nonnull)inf;
@end

@protocol EmSplashDelegate;

/// 开屏广告
SWIFT_CLASS("_TtC5EmAds8EmSplash")
@interface EmSplash : NSObject
- (nonnull instancetype)initWithViewController:(UIViewController * _Null_unspecified)viewController delegate:(id <EmSplashDelegate> _Nullable)delegate OBJC_DESIGNATED_INITIALIZER;
/// 仅拉取广告
- (void)loadOnly;
/// 展示广告，和loadOnly()方法搭配使用
- (void)show;
/// 销毁广告
- (void)destroy;
/// 拉取并展示广告
- (void)loadAndShow;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// 开屏⼴告的生命周期协议
SWIFT_PROTOCOL("_TtP5EmAds16EmSplashDelegate_")
@protocol EmSplashDelegate <EmBaseAdDelegate>
- (void)onSplashComplete;
/// 跳过 (注意有些渠道会只会响应onAdClose)
- (void)onSplashSkip;
@end


SWIFT_CLASS("_TtC5EmAds16OgBQyFHnoXhZbpJF")
@interface OgBQyFHnoXhZbpJF : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIColor;

@interface UIImage (SWIFT_EXTENSION(EmAds))
+ (UIImage * _Nullable)ins_imageWithColor:(UIColor * _Nonnull)color SWIFT_WARN_UNUSED_RESULT;
@end

@class UIWindow;

SWIFT_CLASS("_TtC5EmAds16WaUSxxhwqqMXCGQG")
@interface WaUSxxhwqqMXCGQG : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
+ (void)showInWindow;
+ (void)removeLogInWindow;
+ (UIWindow * _Nullable)rootWindow SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)IS_BX SWIFT_WARN_UNUSED_RESULT;
+ (CGFloat)bottomSafeArea SWIFT_WARN_UNUSED_RESULT;
+ (CGFloat)navigationBarHeight SWIFT_WARN_UNUSED_RESULT;
+ (CGFloat)statusBarHeight SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC5EmAds16WiOIWnsmAspalqKh")
@interface WiOIWnsmAspalqKh : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5EmAds16hGUpEVohCbRDSFeN")
@interface hGUpEVohCbRDSFeN : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// 在ObjectMapper映射过程中，将任何数据类型安全的转换成String。用法: foo <- (map[“foo”], SafeStringTransform()), 元组的第二个参数将map中的“foo”强制转换成String
SWIFT_CLASS("_TtC5EmAds16tkYiQLfbIMfhnlwt")
@interface tkYiQLfbIMfhnlwt : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5EmAds16xNWrgMoOtnyYYGfx")
@interface xNWrgMoOtnyYYGfx : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
